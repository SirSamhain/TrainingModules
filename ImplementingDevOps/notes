
Challenge with becoming software-driven
	* Lack of trust
	* Oppressive tech debt
	* lack of automation
	* competing silo priorities
	* Focus on efficiencies and local optimization
	* Culture doesn't accept risk, change


High performing IT organizations: 
	* 200x more frequent deployments
	* 24x faster recovery from failure
	* 3x lower change failure rate
	* 22% less time on unplanned work
	* 50% less time remediating security issues

Core DevOps Values
	* Trust
	* Empowerment
	* Accountability
	* Continuous improvement
	* Data-driven decisions
	* Customer empathy

Characteristics of a DevOps Environment
	* Optimized for throughput
	* Clear view of entire deployment pipeline
	* Customer-centric definition of "done"
	* Small, frequent software releases
	* Defined feedback loops
	* Automation-centric
	* Focused on outcomes, not activities

Changes You MAY see while adopting DevOps
	* Philosophy changes
	* Team Changes
	* Tool changes
	* Satisfaction changes

WEEK OF DEVOPS 
	MONDAYS
		* org/team standups
		* assign on-call engineer
		* plan next sprint
		* triage new feature requests
		* merge code with master branch	































